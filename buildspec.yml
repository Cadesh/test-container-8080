version: 0.2

env:
  secrets-manager:
    AWS_ACC: "arn:aws:secretsmanager:ca-central-1:637423286507:secret:aws_account_id-3NDDly:AWS_ACC" 
    #GITHUB_USER: "arn:aws:secretsmanager:ca-central-1:637423286507:secret:github_credentials-8SFFpa:GITHUB_USER"
    GITHUB_TOKEN: "arn:aws:secretsmanager:ca-central-1:637423286507:secret:github_credentials-8SFFpa:GITHUB_TOKEN"
  variables:
    MY_ENV_VAR: my_value_100

phases:
  pre_build:
    commands:
      - GITHUB_REPO=github.com/Cadesh/test-container-8080.git
      - REGION=ca-central-1
      - echo Logging in to Amazon ECR...
      - aws --version
      - ECR_URI=$AWS_ACC.dkr.ecr.$REGION.amazonaws.com
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ECR_URI
      - BASE_IMG_NAME=test-container-8080
      - DOCKERFILE=Dockerfile-Test-Container-8080
      - DOCKER_REPO_URI=$AWS_ACC.dkr.ecr.$REGION.amazonaws.com/$BASE_IMG_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      #- git clone https://$GITHUB_TOKEN@$GITHUB_REPO
      # as the repo is public we dont need the token to clone
      - git clone https://$GITHUB_REPO
      - echo Build started on `date`
      - echo Building the Docker image...
      - curl -X POST -H "Content-Type: application/json" -d '{"key":"test1"}' http://3.96.45.59:5000/submit
      #- docker build -t $DOCKER_REPO_URI:latest -f ./$DOCKERFILE --build-arg new_var=my_value_103 .
      #- docker tag $DOCKER_REPO_URI:latest $DOCKER_REPO_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      #- docker push $DOCKER_REPO_URI:latest
      #- docker push $DOCKER_REPO_URI:$IMAGE_TAG
